basePath: /
definitions:
  chat.ChatResponse:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      message:
        type: string
      sender:
        type: string
      userId:
        type: string
    type: object
  chat.CreateChatRequest:
    properties:
      message:
        type: string
      roomId:
        type: string
      userId:
        type: string
    type: object
  chat.DeleteChatRequest:
    properties:
      id:
        type: integer
    type: object
  room.RoomRequest:
    properties:
      room_id:
        type: string
      user_id:
        type: string
    type: object
  room.RoomResponse:
    properties:
      roomId:
        type: string
    type: object
  user.LonginResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  user.UserListResponse:
    properties:
      email:
        type: string
      id:
        type: string
      imagePath:
        type: string
      roomId:
        type: string
      userName:
        type: string
    type: object
  user.UserProfileRequest:
    properties:
      userName:
        type: string
    type: object
  user.UserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  user.UserResponse:
    properties:
      email:
        type: string
      id:
        type: string
    type: object
info:
  contact: {}
  license:
    name: ymd
  title: homework API
  version: "1.0"
paths:
  /chat/create:
    post:
      consumes:
      - application/json
      description: チャット保存
      parameters:
      - description: チャット保存
        in: body
        name: body
        schema:
          $ref: '#/definitions/chat.CreateChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chat.ChatResponse'
      summary: チャット保存API
  /chat/delete:
    put:
      consumes:
      - application/json
      description: ルーム内のチャットを削除
      parameters:
      - description: ルームID
        in: body
        name: body
        schema:
          $ref: '#/definitions/chat.DeleteChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: チャット削除API
  /chat/get/{room_id}:
    get:
      consumes:
      - application/json
      description: ルーム内のチャットを取得
      parameters:
      - description: ルームID
        in: path
        name: room_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/chat.ChatResponse'
            type: array
      summary: チャット取得API
  /create_profile:
    post:
      consumes:
      - application/json
      description: プロフィール作成
      parameters:
      - description: プロフィール作成
        in: body
        name: body
        schema:
          $ref: '#/definitions/user.UserProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: プロフィール作成API
  /login:
    post:
      consumes:
      - application/json
      description: アプリケーションのログイン
      parameters:
      - description: サインアップ
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.LonginResponse'
      summary: ログインAPI
  /logout:
    post:
      consumes:
      - application/json
      description: アプリケーションからログアウト
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: ログアウトAPI
  /room/create:
    post:
      consumes:
      - application/json
      description: ルーム作成
      parameters:
      - description: ルームID
        in: body
        name: body
        schema:
          $ref: '#/definitions/room.RoomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/room.RoomResponse'
      summary: ルーム作成API
  /signin:
    post:
      consumes:
      - application/json
      description: ユーザー新規登録
      parameters:
      - description: サインアップ
        in: body
        name: body
        schema:
          $ref: '#/definitions/user.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponse'
      summary: ユーザー新規登録API
  /users:
    get:
      consumes:
      - application/json
      description: ユーザー一覧取得
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.UserListResponse'
            type: array
      summary: ユーザー一覧取得API
swagger: "2.0"
